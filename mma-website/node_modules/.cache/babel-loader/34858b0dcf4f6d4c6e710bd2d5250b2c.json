{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\mastery-music-academy\\\\src\\\\components\\\\InputFields.js\";\nimport React from \"react\";\nimport { isValidNumber } from \"libphonenumber-js\"; //Validation functions\n\nconst inputValidation = (name, value) => {\n  if (name.includes(\"phone\")) {\n    return validatePhone(value);\n  } else if (name.includes(\"email\")) {\n    return validateEmail(value);\n  } else {\n    return validateText(value);\n  }\n};\n\nconst validateText = value => {};\n\nconst validatePhone = value => {\n  return isValidNumber(value);\n};\n\nconst validateEmail = value => {\n  return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value);\n}; //Input fields\n\n\nconst TextField = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: props.fieldname,\n    className: \"control-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.title), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: props.fieldname,\n    type: \"text\",\n    placeholder: props.placeholdertext,\n    name: props.fieldname,\n    value: props.fieldvalue,\n    onChange: props.handler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n};\n\nconst PhoneField = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: props.fieldname,\n    className: \"control-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.title), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: props.fieldname,\n    type: \"tel\",\n    placeholder: props.placeholdertext,\n    name: props.fieldname,\n    value: props.fieldvalue,\n    onChange: props.handler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};\n\nconst EmailField = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: props.fieldname,\n    className: \"control-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, props.title), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: props.fieldname,\n    type: \"email\",\n    placeholder: props.placeholdertext,\n    name: props.fieldname,\n    value: props.fieldvalue,\n    onChange: props.handler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })));\n};\n\nconst SelectField = props => {\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: props.fieldname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \" \", props.title, \" \"), React.createElement(\"select\", {\n    className: \"form-control\",\n    name: props.fieldname,\n    value: props.fieldvalue,\n    onChange: props.handler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, props.placeholdertext), props.options.map(option => {\n    return React.createElement(\"option\", {\n      key: option,\n      value: option,\n      label: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, option);\n  })));\n};\n\nexport { TextField, EmailField, SelectField, PhoneField, inputValidation };","map":{"version":3,"sources":["C:\\Projects\\mastery-music-academy\\src\\components\\InputFields.js"],"names":["React","isValidNumber","inputValidation","name","value","includes","validatePhone","validateEmail","validateText","test","TextField","props","fieldname","title","placeholdertext","fieldvalue","handler","PhoneField","EmailField","SelectField","options","map","option"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { isValidNumber } from \"libphonenumber-js\";\r\n\r\n//Validation functions\r\nconst inputValidation = (name, value) => {\r\n  if (name.includes(\"phone\")) {\r\n    return validatePhone(value);\r\n  } else if (name.includes(\"email\")) {\r\n    return validateEmail(value);\r\n  } else {\r\n    return validateText(value);\r\n  }\r\n};\r\nconst validateText = value => {};\r\n\r\nconst validatePhone = value => {\r\n  return isValidNumber(value);\r\n};\r\n\r\nconst validateEmail = value => {\r\n  return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value);\r\n};\r\n\r\n//Input fields\r\nconst TextField = props => {\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor={props.fieldname} className=\"control-label\">\r\n          {props.title}\r\n        </label>\r\n        <input\r\n          className=\"form-control\"\r\n          id={props.fieldname}\r\n          type=\"text\"\r\n          placeholder={props.placeholdertext}\r\n          name={props.fieldname}\r\n          value={props.fieldvalue}\r\n          onChange={props.handler}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PhoneField = props => {\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor={props.fieldname} className=\"control-label\">\r\n          {props.title}\r\n        </label>\r\n        <input\r\n          className=\"form-control\"\r\n          id={props.fieldname}\r\n          type=\"tel\"\r\n          placeholder={props.placeholdertext}\r\n          name={props.fieldname}\r\n          value={props.fieldvalue}\r\n          onChange={props.handler}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EmailField = props => {\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor={props.fieldname} className=\"control-label\">\r\n          {props.title}\r\n        </label>\r\n        <input\r\n          className=\"form-control\"\r\n          id={props.fieldname}\r\n          type=\"email\"\r\n          placeholder={props.placeholdertext}\r\n          name={props.fieldname}\r\n          value={props.fieldvalue}\r\n          onChange={props.handler}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectField = props => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={props.fieldname}> {props.title} </label>\r\n      <select\r\n        className=\"form-control\"\r\n        name={props.fieldname}\r\n        value={props.fieldvalue}\r\n        onChange={props.handler}\r\n      >\r\n        <option value=\"\" disabled>\r\n          {props.placeholdertext}\r\n        </option>\r\n        {props.options.map(option => {\r\n          return (\r\n            <option key={option} value={option} label={option}>\r\n              {option}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { TextField, EmailField, SelectField, PhoneField, inputValidation };\r\n"]},"metadata":{},"sourceType":"module"}